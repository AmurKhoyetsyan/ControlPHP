#!/usr/bin/env php
<?php
    require __DIR__ . '/vendor/autoload.php';
    use Lib\File\File;

    function redFile($dir)
    {
        if (!File::issetFile($dir)) {
            return null;
        }

        return File::getContent($dir);
    }

    function getScriptBush($name)
    {
        $dir = basePath() . DIRECTORY_SEPARATOR . 'lib' . DIRECTORY_SEPARATOR . 'BushCommand' . DIRECTORY_SEPARATOR . $name . '.sh';

        $file = redFile($dir);

        if (!is_null($file)) {
            $uuid = uuid(50);

            $path = basePath() . DIRECTORY_SEPARATOR . 'storage' . DIRECTORY_SEPARATOR . 'bush' . DIRECTORY_SEPARATOR . $uuid . '.php';

            File::createFile($path, "<?php \n" . $file);

            include_once $path;

            File::removeFile($path);
        }
    }

    function removeStorageFiles($name)
    {
        $start = time();

        $dir = basePath() . DIRECTORY_SEPARATOR . 'storage' . DIRECTORY_SEPARATOR . $name;

        $files = scanDir($dir);

        foreach ($files as $file => $value) {
            if ($value === '.' || $value === '..') {
                continue;
            }

            $path = $dir . DIRECTORY_SEPARATOR . $value;
            File::removeFile($path);
        }

        $end = time();

        echo 'start :: ' . $start . "\n";
        echo 'end :: ' . $end . "\n";
        echo 'duration :: ' . ($end - $start) . "\n";
    }

    $count = count($argv);

    if ($count > 0 && $argv[0] === 'control' && $count > 1) {
        switch($argv[1]) {
            case 'view:clear': removeStorageFiles('views'); break;
            case 'bush:clear': removeStorageFiles('bush'); break;
            case '-v': getScriptBush('print_version'); break;
            case 'version': getScriptBush('print_version'); break;
            case '-n': getScriptBush('print_name'); break;
            case 'name': getScriptBush('print_name'); break;
            case '-l': getScriptBush('print_license_type'); break;
            case 'license': getScriptBush('print_license_type');; break;
            case '-lp': getScriptBush('print_license'); break;
            case 'license:print': getScriptBush('print_license'); break;
            case '-a': getScriptBush('print_author'); break;
            case 'author': getScriptBush('print_author'); break;
            default: echo $argv[1] . ': command not found'; break;
        }
    }

